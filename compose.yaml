services:
  postgres:
    container_name: 'postgres'
    image: 'docker.io/library/postgres:16-bookworm'
    ports:
      - '5432:5432'
    volumes:
      - 'myapp-pg:/var/lib/postgresql/data'
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'myapp'
  myapp:
    container_name: 'web'
    build:
      context: './'
      dockerfile: 'containerfile'
    image: 'myapp/web'
    environment:
      - 'PORT=$PORT'
      - 'DB_URL=$DB_URL'
      - 'GOMAXPROCS=$GOMAXPROCS'
      - 'GOMEMLIMIT=$GOMEMLIMIT'
    ports:
      - '$PORT:$PORT'
  prometheus:
    container_name: 'prometheus'
    image: 'docker.io/prom/prometheus:v2.54.1'
    command:
      - "--web.listen-address=:${PROMETHEUS_PORT}"
      # keeping default
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    ports:
      - '$PROMETHEUS_PORT:$PROMETHEUS_PORT'
    volumes:
      - './prometheus.yml:/etc/prometheus/prometheus.yml'
    environment:
      - 'GOMAXPROCS=$GOMAXPROCS'
      - 'GOMEMLIMIT=$GOMEMLIMIT'
    depends_on:
      - 'myapp'
  grafana:
    container_name: 'grafana'
    image: 'docker.io/grafana/grafana:11.2.2'
    ports:
      - '$GRAFANA_PORT:3000'
    volumes:
      - './grafana/sources.yaml:/etc/grafana/provisioning/datasources/sources.yaml'
      - './grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml'
      - './grafana/myapp.json:/etc/grafana/provisioning/dashboards/myapp.json'
      - './grafana/myapp-api.json:/etc/grafana/provisioning/dashboards/myapp-api.json'
    environment:
      - 'PROMETHEUS_PORT=$PROMETHEUS_PORT'
    depends_on:
      - 'prometheus'
  k6:
    container_name: 'k6'
    image: 'docker.io/grafana/k6:0.54.0'
    volumes:
      - './k6-script.js:/k6-script.js'
    command: 
      - 'run'
      - '/k6-script.js'
    environment:
      - 'PORT=$PORT'
    depends_on:
      - 'grafana'
volumes:
  myapp-pg:
